/* Description: A simple TCP client that sends a radius value to the server and requests for 
 * 				corresponding area from the server.
 */

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.Scanner;

public class client {
	public static void main(String[] args) throws Exception {

		Scanner input = new Scanner(System.in);

		Socket socket = new Socket("localhost", 8000);
		PrintWriter out = new PrintWriter(socket.getOutputStream(), true);
		BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));

		System.out.println("-------BANK SYSTEM------");

		String username, password;
		int option;

		System.out.println("1.	Existing User");
		System.out.println("2.	New User");
		System.out.print("Enter your option:");
		option = input.nextInt();
		out.println(option);

		if (option == 1) {
			boolean validLogin = validate();

			printOption();
			String bankingOption = input.next();
			if (bankingOption.equals("E"))
				break;
			else {
				while (!bankingOption.equals("E")) {
					switch (bankingOption) {
					case "W":
						out.println("W");
					case "D":
						out.println("D");
					case "C":
						out.println("C");

					}

				}

			}
		}
		if (countInvalid == 3)
			break;
	}

	}}}

	input.close();socket.close();

	}

	private static boolean validate() {
		while (true) {
	}
		System.out.print("Please enter your username: ");
		username = input.next();
		out.println("login_username " + username);
		// check if there are appear to have the username
		// if have the username,let the user enter the password
		if (Integer.parseInt(in.readLine()) == -1) {
			System.out.println("Invalid Username!");
			continue;
		} else {
			int countInvalid = 0;
			// if password exceed 3 time try, the whoel program break
			while (countInvalid < 3) {
				System.out.print("Please enter your passwords: ");
				password = input.next();
				out.println(password);
				if (Integer.parseInt(in.readLine()) == -1) {
					countInvalid++;
					if (countInvalid == 3) {
						System.out.println("Maximum Attempts! Terminated");
						out.println("stop");
						break;
					} else {
						System.out.println("Try Again!");
						continue;
					}
				} else
		return false;
	}

	public static void printOption() {
		System.out.println("W - Withdraw");
		System.out.println("D - Deposit");
		System.out.println("C - Check Balance");
		System.out.println("E - Exit");
		System.out.print("Enter your option: ");
	}
}
